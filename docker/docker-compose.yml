#UTILIZE O ARQUIVO .env PARA CONFIGURAR AS VARIÁVEIS DE AMBIENTE
version: '3'

services:

  mongo:
    image: mongo:4.0
    container_name: mongo
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_PASSWORD=pass
      - MONGO_INITDB_ROOT_USERNAME=root
    networks:
      - webnet
    ports:
      - 27017:27017

  mongo-express:
    image: mongo-express:0.54.0
    restart: always
    container_name: mexpress
    ports:
      - 8081:8081
    environment:
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
      - ME_CONFIG_MONGODB_AUTH_DATABASE=admin
      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
      - ME_CONFIG_MONGODB_ADMINPASSWORD=pass
    links:
      - mongo
    networks:
      - webnet

  be:
    build:
      context: ../be
      dockerfile: Dockerfile.Express
    container_name: express
    volumes:
      - ../be:/usr/app
    environment:
      - NODE_ENV=development
      - MONGODB_URL=mongodb://mongo:27017/GreenDelay
    command: npm start -- --host 0.0.0.0 --port 5000
    depends_on:
      - mongo
    networks:
      - webnet
    ports:
      - "5000:5000"

  angular-site:
      image: jhomoreira/angular-container
      container_name: container-site
      volumes:
        - '../fe:/usr/src/app'
      ports:
        - '4300:4300'
      command: >
        bash -c "ng serve --host 0.0.0.0 --port 4300"
      networks:
        - webnet

  # express:
  #   container_name: container-express
  #   build:
  #     context: ../be
  #     dockerfile: Dockerfile.Express
  #   expose:
  #     - "5000"
  #   networks:
  #     - webnet
  #   env_file:
  #     - ../be/config/local.env
  #   command: >
  #       bash -c "DEBUG=express:* node server.js"
  #   environment:
  #       - MONGODB_URL=mongodb://mongodb:27017/green-delay
  #   volumes:
  #     - ../be/:/usr/app/
  #   ports:
  #     - "5000:5000"

  #Nginx Service
  # webserver:
  #   image: nginx:alpine
  #   container_name: container-webserver
  #   restart: unless-stopped
  #   tty: true
  #   volumes:
  #     - ../:/var/www/api
  #     - ./docker-files/conf.d/nginx.conf:/etc/nginx/conf.d/default.conf
  #   networks:
  #     - webnet
  #     - traefik_proxy
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.webserver.rule=Host(`ws.cms.localhost`)"
  #     - "traefik.http.routers.webserver.entrypoints=web"

  # mailhog:
  #   image: mailhog/mailhog
  #   logging:
  #     driver: 'none'  # disable saving logs
  #   ports:
  #     - 1025:1025 # smtp server
  #     - 8025:8025 # web ui
  #   networks:
  #     - webnet

  # traefik:
  #   image: traefik:v2.0
  #   container_name: traefik_cms
  #   command:
  #     - "--api.insecure=true"
  #     - "--providers.docker=true"
  #     - "--providers.docker.exposedbydefault=false"
  #     - "--entrypoints.web.address=:80"
  #   restart: unless-stopped
  #   networks:
  #     - webnet
  #     - traefik_proxy
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #     - "8085:8080"
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock

networks:
  webnet:
    driver: bridge

  # traefik_proxy:
  #     name: traefik_proxy

volumes:
  db-mongo: